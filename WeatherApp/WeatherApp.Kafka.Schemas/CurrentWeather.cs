// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.11.1
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace WeatherApp.Kafka.Schemas.Avro
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("avrogen", "1.11.1")]
	public partial class CurrentWeather : global::Avro.Specific.ISpecificRecord
	{
		public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse(@"{""type"":""record"",""name"":""CurrentWeather"",""namespace"":""WeatherApp.Kafka.Schemas.Avro"",""fields"":[{""name"":""temperature"",""type"":""double""},{""name"":""windspeed"",""type"":""double""},{""name"":""winddirection"",""type"":""double""},{""name"":""weathercode"",""type"":""int""},{""name"":""time"",""type"":""string""}]}");
		private double _temperature;
		private double _windspeed;
		private double _winddirection;
		private int _weathercode;
		private string _time;
		public virtual global::Avro.Schema Schema
		{
			get
			{
				return CurrentWeather._SCHEMA;
			}
		}
		public double temperature
		{
			get
			{
				return this._temperature;
			}
			set
			{
				this._temperature = value;
			}
		}
		public double windspeed
		{
			get
			{
				return this._windspeed;
			}
			set
			{
				this._windspeed = value;
			}
		}
		public double winddirection
		{
			get
			{
				return this._winddirection;
			}
			set
			{
				this._winddirection = value;
			}
		}
		public int weathercode
		{
			get
			{
				return this._weathercode;
			}
			set
			{
				this._weathercode = value;
			}
		}
		public string time
		{
			get
			{
				return this._time;
			}
			set
			{
				this._time = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.temperature;
			case 1: return this.windspeed;
			case 2: return this.winddirection;
			case 3: return this.weathercode;
			case 4: return this.time;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.temperature = (System.Double)fieldValue; break;
			case 1: this.windspeed = (System.Double)fieldValue; break;
			case 2: this.winddirection = (System.Double)fieldValue; break;
			case 3: this.weathercode = (System.Int32)fieldValue; break;
			case 4: this.time = (System.String)fieldValue; break;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
