# Based on 
# * https://developer.confluent.io/quickstart/kafka-docker/
# * https://www.baeldung.com/ops/kafka-docker-setup
# Fix Cluster ID Mismatch
# * https://github.com/wurstmeister/kafka-docker/issues/559#issuecomment-607441768
# * https://github.com/confluentinc/kafka-images/issues/127#issuecomment-1152703071
version: '3'
services:
  zookeeper-1:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper-1
    user: root
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
#    volumes:
#      - ./volumes/zookeeper1/data:/var/lib/zookeeper/data
#      - ./volumes/zookeeper1/log:/var/lib/zookeeper/log

  zookeeper-2:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper-2
    user: root
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "32181:2181"
#    volumes:
#      - ./volumes/zookeeper2/data:/var/lib/zookeeper/data
#      - ./volumes/zookeeper2/log:/var/lib/zookeeper/log
  
  broker-1:
    image: confluentinc/cp-kafka:7.3.0
    user: root
    container_name: broker-1
    depends_on:
      - zookeeper-1
      - zookeeper-2

    ports:
      - "29092:29092"
    restart: on-failure
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-1:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      #    volumes:
#      - ./volumes/kafka1:/var/lib/kafka/data
      
  broker-2:
    image: confluentinc/cp-kafka:7.3.0
    user: root
    container_name: broker-2
    depends_on:
      - zookeeper-1
      - zookeeper-2
    ports:
      - "39092:39092"
    restart: on-failure
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-2:9092,PLAINTEXT_HOST://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      #    volumes:
#      - ./volumes/kafka2:/var/lib/kafka/data  
      
  broker-3:
    image: confluentinc/cp-kafka:7.3.0
    user: root
    container_name: broker-3
    depends_on:
      - zookeeper-1
      - zookeeper-2
    ports:
      - "49092:49092"
    restart: on-failure
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-3:9092,PLAINTEXT_HOST://localhost:49092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
  #    volumes:
#      - ./volumes/kafka3:/var/lib/kafka/data

  schemaregistry:
    image: confluentinc/cp-schema-registry:7.3.0
    user: root
    container_name: schemaregistry
    restart: on-failure
    depends_on:
      - zookeeper-1
      - zookeeper-2
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: broker-1:9092,broker-2:9092,broker-3:9092
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8085"
    ports:
      - "8085:8085"  