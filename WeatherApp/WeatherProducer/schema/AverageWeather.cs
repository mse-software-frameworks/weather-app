// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.11.1
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace WeatherProducer.AvroSpecific
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("avrogen", "1.11.1")]
	public partial class AverageWeather : global::Avro.Specific.ISpecificRecord
	{
		public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"AverageWeather\",\"namespace\":\"WeatherProducer.AvroSpecifi" +
				"c\",\"fields\":[{\"name\":\"average_temperature\",\"type\":\"double\"},{\"name\":\"temperature" +
				"_measurements\",\"type\":{\"type\":\"array\",\"items\":\"double\"}}]}");
		private double _average_temperature;
		private IList<System.Double> _temperature_measurements;
		public virtual global::Avro.Schema Schema
		{
			get
			{
				return AverageWeather._SCHEMA;
			}
		}
		public double average_temperature
		{
			get
			{
				return this._average_temperature;
			}
			set
			{
				this._average_temperature = value;
			}
		}
		public IList<System.Double> temperature_measurements
		{
			get
			{
				return this._temperature_measurements;
			}
			set
			{
				this._temperature_measurements = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.average_temperature;
			case 1: return this.temperature_measurements;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.average_temperature = (System.Double)fieldValue; break;
			case 1: this.temperature_measurements = (IList<System.Double>)fieldValue; break;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
